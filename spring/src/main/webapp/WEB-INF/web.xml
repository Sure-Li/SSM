<?xml version="1.0" encoding="UTF-8"?>
<!-- <web-app version="4.0" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"> <display-name>Archetype Created Web Application</display-name> 通过配置让Spring容器，随着web容器的启动而启动，默认情况小Spring容器应该只有一个 <listener> <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> </listener> 配置spring容器启动时的配置文件 如果多个 ，隔开 <context-param> <param-name>contextConfigLocation</param-name> <param-value>classpath:spring/spring-context.xml</param-value> </context-param> </web-app> -->
<web-app>

	 <listener> <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> </listener>
	 <context-param>
	  <param-name>contextConfigLocation</param-name> 
	  <param-value>classpath:spring/spring-context.xml</param-value> 
	  </context-param>
	<!-- 配置SpringMVC的 CharacterEncodingFilter 解决乱码 -开始 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 配置SpringMVC的 CharacterEncodingFilter 解决乱码 -结束 -->
	<!-- 核心 -->
	<servlet>
		<servlet-name>springMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springMVC\springMvc-config.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>springMVC</servlet-name>
		<!-- 配置dispatch而Servlet要拦截的请求 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

</web-app>