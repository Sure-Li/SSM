<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
        <!-- 启动自动扫描 -->
        <context:component-scan base-package="com.situ.ssm">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        </context:component-scan>
        <!-- 引入jdbc.properties classpath去classes路径下找 -->
        <context:property-placeholder location="classpath:jdbc.properties"/>
        <!-- 创建一个数据源 使用hikariCP生成-->
        <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        	<property name="jdbcUrl" value="${db.jdbcUrl}"></property>
        	<property name="username" value="${db.username}"></property>
        	<property name="password" value="${db.password}"></property>
        	<property name="driverClassName" value="${db.driverClass}"></property>
        	<!-- 连接只读数据库时配置为true， 保证安全 -->
			<property name="readOnly" value="false" />
			<!-- 最小空闲连接数量 -->
			<property name="minimumIdle" value="${pool.minIdle}" />
			<!-- 连接池最大连接数，默认是10 -->
			<property name="maximumPoolSize" value="${pool.maxActive}" />
			<!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->
			<property name="connectionTimeout" value="30000" />
			<!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
			<property name="idleTimeout" value="600000" />
			<!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） -->
			<property name="maxLifetime" value="1800000" />
        </bean>
        <!-- 使用SqlSessionFactoryBean用来生成sqlSessionFactory实例 -->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
			<!-- 配置clazz别名 --> 
			<!-- 会在基本包下扫描别名 -->
			<property name="typeAliasesPackage" value="com.situ.ssm"></property>
			<property name="mapperLocations" value="classpath:mybatis/mappers/*-mapper.xml"></property>
		</bean>
		<!-- 扫描给定包下的 @repository修饰的接口+mappers生成dao的实现类 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  		<property name="basePackage" value="com.situ.ssm"></property>
	  		<property name="annotationClass" value="org.springframework.stereotype.Repository"></property>
		</bean>
		
</beans>

